{"ast":null,"code":"var _jsxFileName = \"/home/kelly/Springboard/exercises/react-jokes-classes/src/JokeList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends Component {\n  // const [jokes, setJokes] = useState([]);\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n  }\n  /* get jokes if there are no jokes */\n\n\n  componentDidUpdate() {\n    if (!this.jokes) {\n      this.getJokes();\n    }\n  } // useEffect(function() {\n\n\n  async getJokes() {\n    let j = this.state.jokes; // let seenJokes = this.state.jokes\n    // let seenJokes = new Set();\n\n    try {\n      let seenJokes = [];\n      let jokeObj = {\n        text: null\n      }; //  while (j.length < numJokesToGet) {\n\n      for (let i = 0; i < this.numJokesToGet; i++) {\n        // let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        //   headers: { Accept: \"application/json\" }\n        // });\n        // let { status, ...jokeObj } = res.data;\n        let joke = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        } // let { status, ...jokeObj } = getJoke.data;\n\n      } // while (j.length < numJokesToGet) {\n      //   // let res = await axios.get(\"https://icanhazdadjoke.com\", {\n      //   //   headers: { Accept: \"application/json\" }\n      //   // });\n      //   // let { status, ...jokeObj } = res.data;\n      //   if (!seenJokes.has(jokeObj.id)) {\n      //     seenJokes.add(jokeObj.id);\n      //     j.push({ ...jokeObj, votes: 0 });\n      //   } else {\n      //     console.error(\"duplicate found!\");\n      //   }\n      // }\n      // setJokes(j);\n\n    } catch (e) {\n      console.log(e);\n    } // if (jokes.length === 0) getJokes();\n    // }, [jokes, numJokesToGet]);\n\n    /* empty joke list and then call getJokes */\n    // function generateNewJokes() {\n    //   setJokes([]);\n    // }\n\n    /* change vote for this id by delta (+1 or -1) */\n    // function vote(id, delta) {\n    //   setJokes(allJokes =>\n    //     allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    //   );\n    // }\n\n    /* render: either loading spinner or list of sorted jokes. */\n    // if (jokes.length) {\n    //   let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  }\n\n  render() {\n    let showJokes = this.state.jokes;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"JokeList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, showJokes);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/home/kelly/Springboard/exercises/react-jokes-classes/src/JokeList.js"],"names":["React","Component","axios","Joke","JokeList","constructor","props","state","jokes","componentDidUpdate","getJokes","j","seenJokes","jokeObj","text","i","numJokesToGet","joke","get","headers","Accept","has","id","add","push","votes","console","error","e","log","render","showJokes","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;AAGA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAK/B;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;AAED;;;AACAC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,CAAC,KAAKD,KAAV,EAAiB;AACf,WAAKE,QAAL;AACD;AACF,GAlB8B,CAuB/B;;;AACA,QAAMA,QAAN,GAAiB;AACf,QAAIC,CAAC,GAAG,KAAKJ,KAAL,CAAWC,KAAnB,CADe,CAEf;AACA;;AAGA,QAAI;AAEF,UAAII,SAAS,GAAG,EAAhB;AACA,UAAIC,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd,CAHE,CAOF;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,aAAzB,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C;AACA;AACA;AACA;AACA,YAAIE,IAAI,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,4BAAV,EAAwC;AACvDC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAD8C,SAAxC,CAAjB;;AAGA,YAAI,CAACR,SAAS,CAACS,GAAV,CAAcR,OAAO,CAACS,EAAtB,CAAL,EAAgC;AAC5BV,UAAAA,SAAS,CAACW,GAAV,CAAcV,OAAO,CAACS,EAAtB;AACAX,UAAAA,CAAC,CAACa,IAAF,CAAO,EAAE,GAAGX,OAAL;AAAcY,YAAAA,KAAK,EAAE;AAArB,WAAP;AACD,SAHH,MAGS;AACLC,UAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd;AACD,SAbwC,CAgB3C;;AACD,OAzBC,CA2BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH,KAzCD,CAyCE,OAAOC,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACG,GAAR,CAAYD,CAAZ;AACD,KAjDc,CAoDjB;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AACC;;AACDE,EAAAA,MAAM,GAAG;AAEP,QAAIC,SAAS,GAAG,KAAKxB,KAAL,CAAWC,KAA3B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIuB,SADJ,CADF;AAKD;;AA1G8B;;AAA3B3B,Q,CACG4B,Y,GAAe;AACpBhB,EAAAA,aAAa,EAAE;AADK,C;AA+GxB,eAAeZ,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n\nclass JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 10\n  }\n\n  // const [jokes, setJokes] = useState([]);\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    }\n  }\n\n  /* get jokes if there are no jokes */\n  componentDidUpdate() {\n    if (!this.jokes) {\n      this.getJokes()\n    }\n  }\n\n\n\n\n  // useEffect(function() {\n  async getJokes() {\n    let j = this.state.jokes;\n    // let seenJokes = this.state.jokes\n    // let seenJokes = new Set();\n\n\n    try {\n\n      let seenJokes = []\n      let jokeObj = {\n        text: null,\n      };\n  \n      //  while (j.length < numJokesToGet) {\n      for (let i = 0; i < this.numJokesToGet; i++) {\n        // let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        //   headers: { Accept: \"application/json\" }\n        // });\n        // let { status, ...jokeObj } = res.data;\n        let joke = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        });\n        if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({ ...jokeObj, votes: 0 });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n\n\n        // let { status, ...jokeObj } = getJoke.data;\n      }\n        \n        // while (j.length < numJokesToGet) {\n        //   // let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        //   //   headers: { Accept: \"application/json\" }\n        //   // });\n        //   // let { status, ...jokeObj } = res.data;\n  \n        //   if (!seenJokes.has(jokeObj.id)) {\n        //     seenJokes.add(jokeObj.id);\n        //     j.push({ ...jokeObj, votes: 0 });\n        //   } else {\n        //     console.error(\"duplicate found!\");\n        //   }\n        // }\n        // setJokes(j);\n    } catch (e) {\n      console.log(e);\n    }\n   \n  \n  // if (jokes.length === 0) getJokes();\n  // }, [jokes, numJokesToGet]);\n\n  /* empty joke list and then call getJokes */\n\n  // function generateNewJokes() {\n  //   setJokes([]);\n  // }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  // function vote(id, delta) {\n  //   setJokes(allJokes =>\n  //     allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n  //   );\n  // }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  // if (jokes.length) {\n  //   let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  }\n  render() {\n\n    let showJokes = this.state.jokes\n    return (\n      <div className=\"JokeList\">\n        { showJokes }\n      </div>\n    )\n  };\n  \n \n  // return null;\n}\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}