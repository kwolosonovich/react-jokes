{"ast":null,"code":"var _jsxFileName = \"/home/kelly/Springboard/exercises/react-jokes-classes/src/JokeList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends Component {\n  // const [jokes, setJokes] = useState([]);\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n  }\n  /* get jokes if there are no jokes */\n\n\n  componentDidUpdate() {\n    if (!this.jokes) {\n      this.getJokes();\n    }\n  } // useEffect(function() {\n\n\n  async getJokes() {\n    // let jokeList = this.state.jokes;\n    // let seenJokes = this.state.jokes\n    // let seenJokes = new Set();\n    try {\n      let jokes = this.state.jokes;\n      let jokeObj = {\n        text: null,\n        votes: 0\n      };\n      let seenJokes = [];\n      let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\") || \"{}\");\n\n      for (let i = 0; i < this.numJokesToGet; i++) {\n        // let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        //   headers: { Accept: \"application/json\" }\n        // });\n        // let { status, ...jokeObj } = res.data;\n        let joke = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokeObj.text = joke;\n          this.state.jokes.push(jokeObj);\n        } else {\n          console.error(\"duplicate found!\");\n        } // let { status, ...jokeObj } = getJoke.data;\n\n      }\n\n      this.setState({\n        jokes\n      });\n      window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    } catch (e) {\n      console.log(e);\n    } // if (jokes.length === 0) getJokes();\n    // }, [jokes, numJokesToGet]);\n\n    /* empty joke list and then call getJokes */\n    // function generateNewJokes() {\n    //   setJokes([]);\n    // }\n\n    /* change vote for this id by delta (+1 or -1) */\n    // function vote(id, delta) {\n    //   setJokes(allJokes =>\n    //     allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    //   );\n    // }\n\n    /* render: either loading spinner or list of sorted jokes. */\n    // if (jokes.length) {\n    //   let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  }\n\n  render() {\n    let showJokes = this.state.jokes;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"JokeList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, showJokes);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/home/kelly/Springboard/exercises/react-jokes-classes/src/JokeList.js"],"names":["React","Component","axios","Joke","JokeList","constructor","props","state","jokes","componentDidUpdate","getJokes","jokeObj","text","votes","seenJokes","jokeVotes","JSON","parse","window","localStorage","getItem","i","numJokesToGet","joke","get","headers","Accept","has","id","add","push","console","error","setState","setItem","stringify","e","log","render","showJokes","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;AAGA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAK/B;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;AAED;;;AACAC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,CAAC,KAAKD,KAAV,EAAiB;AACf,WAAKE,QAAL;AACD;AACF,GAlB8B,CAoB/B;;;AACA,QAAMA,QAAN,GAAiB;AACf;AACA;AACA;AAEA,QAAI;AACF,UAAIF,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AACA,UAAIG,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAE,IADM;AAEZC,QAAAA,KAAK,EAAE;AAFK,OAAd;AAIA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CACdC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,KAA4C,IAD9B,CAAhB;;AAIA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,aAAzB,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C;AACA;AACA;AACA;AACA,YAAIE,IAAI,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,4BAAV,EAAwC;AACvDC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAD8C,SAAxC,CAAjB;;AAGA,YAAI,CAACZ,SAAS,CAACa,GAAV,CAAcJ,IAAI,CAACK,EAAnB,CAAL,EAA6B;AAC3Bd,UAAAA,SAAS,CAACe,GAAV,CAAcN,IAAI,CAACK,EAAnB;AACAjB,UAAAA,OAAO,CAACC,IAAR,GAAeW,IAAf;AACA,eAAKhB,KAAL,CAAWC,KAAX,CAAiBsB,IAAjB,CAAsBnB,OAAtB;AACD,SAJD,MAIO;AACLoB,UAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd;AACD,SAd0C,CAgB3C;;AACD;;AAED,WAAKC,QAAL,CAAc;AAAEzB,QAAAA;AAAF,OAAd;AACAU,MAAAA,MAAM,CAACC,YAAP,CAAoBe,OAApB,CAA4B,WAA5B,EAAyClB,IAAI,CAACmB,SAAL,CAAepB,SAAf,CAAzC;AACD,KAhCD,CAgCE,OAAOqB,CAAP,EAAU;AACVL,MAAAA,OAAO,CAACM,GAAR,CAAYD,CAAZ;AACD,KAvCc,CA0CjB;AACA;;AAEA;AAEA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AACC;;AAEDE,EAAAA,MAAM,GAAG;AAEP,QAAIC,SAAS,GAAG,KAAKhC,KAAL,CAAWC,KAA3B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI+B,SADJ,CADF;AAKD;;AA9F8B;;AAA3BnC,Q,CACGoC,Y,GAAe;AACpBlB,EAAAA,aAAa,EAAE;AADK,C;AAgGxB,eAAelB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n\nclass JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 10\n  }\n\n  // const [jokes, setJokes] = useState([]);\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    }\n  }\n\n  /* get jokes if there are no jokes */\n  componentDidUpdate() {\n    if (!this.jokes) {\n      this.getJokes()\n    }\n  }\n\n  // useEffect(function() {\n  async getJokes() {\n    // let jokeList = this.state.jokes;\n    // let seenJokes = this.state.jokes\n    // let seenJokes = new Set();\n\n    try {\n      let jokes = this.state.jokes;\n      let jokeObj = {\n        text: null,\n        votes: 0,\n      };\n      let seenJokes = []\n      let jokeVotes = JSON.parse(\n        window.localStorage.getItem(\"jokeVotes\") || \"{}\"\n      )\n  \n      for (let i = 0; i < this.numJokesToGet; i++) {\n        // let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        //   headers: { Accept: \"application/json\" }\n        // });\n        // let { status, ...jokeObj } = res.data;\n        let joke = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        });\n        if (!seenJokes.has(joke.id)) {\n          seenJokes.add(joke.id);\n          jokeObj.text = joke;\n          this.state.jokes.push(jokeObj);\n        } else {\n          console.error(\"duplicate found!\");\n        }\n        \n        // let { status, ...jokeObj } = getJoke.data;\n      }\n        \n      this.setState({ jokes });\n      window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    } catch (e) {\n      console.log(e);\n    }\n   \n  \n  // if (jokes.length === 0) getJokes();\n  // }, [jokes, numJokesToGet]);\n\n  /* empty joke list and then call getJokes */\n\n  // function generateNewJokes() {\n  //   setJokes([]);\n  // }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  // function vote(id, delta) {\n  //   setJokes(allJokes =>\n  //     allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n  //   );\n  // }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  // if (jokes.length) {\n  //   let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  }\n\n  render() {\n\n    let showJokes = this.state.jokes;\n    return (\n      <div className=\"JokeList\">\n        { showJokes }\n      </div>\n    )\n  };\n}\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}