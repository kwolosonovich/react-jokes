{"ast":null,"code":"var _jsxFileName = \"/home/kelly/Springboard/exercises/react-jokes-classes/src/JokeList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends Component {\n  // const [jokes, setJokes] = useState([]);\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.resetVotes = this.resetVotes.bind(this);\n    this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n  /* get jokes if there are no jokes */\n\n\n  componentDidUpdate() {\n    if (!this.jokes) {\n      this.getJokes();\n    }\n  } // useEffect(function() {\n\n\n  async getJokes() {\n    try {\n      let jokes = this.state.jokes;\n      let jokeObj = {\n        text: null,\n        votes: 0,\n        id: null\n      };\n      let seenJokes = new Set(jokes.map(joke => joke.id));\n      let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\") || \"{}\");\n\n      for (let i = 0; i < this.numJokesToGet; i++) {\n        let jokeRes = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n\n        if (!seenJokes.jokeRes.id) {\n          seenJokes.add(jokeRes.id);\n          jokeObj.text = jokeRes;\n          this.state.jokes.push(jokeObj);\n        } else {\n          console.error(\"duplicate\");\n        }\n      }\n\n      this.setState({\n        jokes\n      });\n      window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState(st => ({\n      jokes: st.jokes.filter(joke => joke.locked)\n    }));\n  }\n\n  resetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke,\n        votes: 0\n      }))\n    }));\n  }\n  /* change vote for this id by delta (+1 or -1) */\n\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => joke.id === id ? { ...joke,\n        votes: joke.votes + delta\n      } : joke)\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => joke.id === id ? { ...joke,\n        locked: !joke.locked\n      } : joke)\n    }));\n  }\n\n  render() {\n    let showJokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\n    let allLocked = showJokes.filter(joke => joke.locked).length === this.props.numJokesToGet;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"JokeList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: this.generateNewJokes,\n      disabled: allLocked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Get New Jokes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: this.resetVotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Reset Vote Counts\"), showJokes.map(joke => /*#__PURE__*/React.createElement(Joke, {\n      text: joke.text,\n      key: joke.id,\n      id: joke.id,\n      votes: joke.votes,\n      vote: this.vote,\n      locked: joke.locked,\n      toggleLock: this.toggleLock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    })), showJokes.length < this.props.numJokesToGet ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-4x fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/home/kelly/Springboard/exercises/react-jokes-classes/src/JokeList.js"],"names":["React","Component","axios","Joke","JokeList","constructor","props","state","jokes","generateNewJokes","bind","resetVotes","toggleLock","vote","componentDidUpdate","getJokes","jokeObj","text","votes","id","seenJokes","Set","map","joke","jokeVotes","JSON","parse","window","localStorage","getItem","i","numJokesToGet","jokeRes","get","headers","Accept","add","push","console","error","setState","setItem","stringify","e","log","st","filter","locked","delta","render","showJokes","sort","a","b","allLocked","length","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n\nclass JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 10,\n  };\n\n  // const [jokes, setJokes] = useState([]);\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: [],\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.resetVotes = this.resetVotes.bind(this);\n    this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  /* get jokes if there are no jokes */\n  componentDidUpdate() {\n    if (!this.jokes) {\n      this.getJokes();\n    }\n  }\n\n  // useEffect(function() {\n  async getJokes() {\n\n    try {\n      let jokes = this.state.jokes;\n      let jokeObj = {\n        text: null,\n        votes: 0,\n        id: null\n      };\n      let seenJokes = new Set(jokes.map((joke) => joke.id));\n      let jokeVotes = JSON.parse(\n        window.localStorage.getItem(\"jokeVotes\") || \"{}\"\n      );\n\n      for (let i = 0; i < this.numJokesToGet; i++) {\n        let jokeRes = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        });\n        if (!seenJokes.jokeRes.id) {\n          seenJokes.add(jokeRes.id);\n          jokeObj.text = jokeRes;\n          this.state.jokes.push(jokeObj);\n        } else {\n          console.error(\"duplicate\");\n        }\n      }\n\n      this.setState({ jokes });\n      window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  generateNewJokes() {\n    this.setState((st) => ({ jokes: st.jokes.filter((joke) => joke.locked) }));\n  }\n\n  resetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState((st) => ({\n      jokes: st.jokes.map((joke) => ({ ...joke, votes: 0 })),\n    }));\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState((st) => ({\n      jokes: st.jokes.map((joke) =>\n        joke.id === id ? { ...joke, votes: joke.votes + delta } : joke\n      ),\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState((st) => ({\n      jokes: st.jokes.map((joke) =>\n        joke.id === id ? { ...joke, locked: !joke.locked } : joke\n      ),\n    }));\n  }\n\n  render() {\n    let showJokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\n    let allLocked =\n      showJokes.filter((joke) => joke.locked).length === this.props.numJokesToGet;\n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={this.generateNewJokes}\n          disabled={allLocked}\n        >\n          Get New Jokes\n        </button>\n        <button className=\"JokeList-getmore\" onClick={this.resetVotes}>\n          Reset Vote Counts\n        </button>\n        {showJokes.map((joke) => (\n          <Joke\n            text={joke.text}\n            key={joke.id}\n            id={joke.id}\n            votes={joke.votes}\n            vote={this.vote}\n            locked={joke.locked}\n            toggleLock={this.toggleLock}\n          />\n        ))}\n        {showJokes.length < this.props.numJokesToGet ? (\n          <div className=\"loading\">\n            <i className=\"fas fa-4x fa-spinner fa-spin\" />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}