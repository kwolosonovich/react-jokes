{"ast":null,"code":"var _jsxFileName = \"/home/kelly/Springboard/exercises/react-jokes-classes/src/JokeList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends Component {\n  // const [jokes, setJokes] = useState([]);\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.resetVotes = this.resetVotes.bind(this);\n    this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n  /* get jokes if there are no jokes */\n\n\n  componentDidUpdate() {\n    if (!this.jokes) {\n      this.getJokes();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  } // useEffect(function() {\n\n\n  async getJokes() {\n    try {\n      let jokes = this.state.jokes; // let jokeObj = {\n      //   text: null,\n      //   votes: 0,\n      //   id: null,\n      //   locked: false,\n      // };\n\n      let seenJokes = new Set(jokes.map(j => j.id));\n      let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\") || \"{}\");\n\n      for (let i = 0; i < this.numJokesToGet; i++) {\n        let jokeRes = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...joke\n        } = jokeRes.data;\n\n        if (!seenJokes.joke.id) {\n          seenJokes.add(joke.id);\n          jokeVotes[joke.id] = jokeVotes[joke.id];\n          jokeObj.text = joke;\n          this.state.jokes.push(joke);\n        } else {\n          console.error(\"duplicate\");\n        }\n      }\n\n      this.setState({\n        jokes\n      });\n      window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState(st => ({\n      jokes: st.jokes.filter(j => j.locked)\n    }));\n  }\n\n  resetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState(st => ({\n      jokes: st.jokes.map(joke => ({ ...joke,\n        votes: 0\n      }))\n    }));\n  }\n  /* change vote for this id by delta (+1 or -1) */\n\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? { ...j,\n        locked: !j.locked\n      } : j)\n    }));\n  }\n\n  render() {\n    let showJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    let allLocked = showJokes.filter(j => j.locked).length === this.props.numJokesToGet;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"JokeList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: this.generateNewJokes,\n      disabled: allLocked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"Get New Jokes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: this.resetVotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"Reset Vote Counts\"), showJokes.map(j => /*#__PURE__*/React.createElement(Joke, {\n      text: j.text,\n      key: j.id,\n      id: j.id,\n      votes: j.votes,\n      vote: this.vote,\n      locked: j.locked,\n      toggleLock: this.toggleLock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    })), showJokes.length < this.props.numJokesToGet ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-4x fa-spinner fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/home/kelly/Springboard/exercises/react-jokes-classes/src/JokeList.js"],"names":["React","Component","axios","Joke","JokeList","constructor","props","state","jokes","generateNewJokes","bind","resetVotes","toggleLock","vote","componentDidUpdate","getJokes","componentDidMount","length","numJokesToGet","seenJokes","Set","map","j","id","jokeVotes","JSON","parse","window","localStorage","getItem","i","jokeRes","get","headers","Accept","status","joke","data","add","jokeObj","text","push","console","error","setState","setItem","stringify","e","log","st","filter","locked","votes","delta","render","showJokes","sort","a","b","allLocked","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n\nclass JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 10,\n  };\n\n  // const [jokes, setJokes] = useState([]);\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: [],\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.resetVotes = this.resetVotes.bind(this);\n    this.toggleLock = this.toggleLock.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  /* get jokes if there are no jokes */\n  componentDidUpdate() {\n    if (!this.jokes) {\n      this.getJokes();\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) this.getJokes();\n  }\n\n  // useEffect(function() {\n  async getJokes() {\n    try {\n      let jokes = this.state.jokes;\n      // let jokeObj = {\n      //   text: null,\n      //   votes: 0,\n      //   id: null,\n      //   locked: false,\n      // };\n      let seenJokes = new Set(jokes.map((j) => j.id));\n      let jokeVotes = JSON.parse(\n        window.localStorage.getItem(\"jokeVotes\") || \"{}\"\n      );\n\n      for (let i = 0; i < this.numJokesToGet; i++) {\n        let jokeRes = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" },\n        });\n\n        let { status, ...joke } = jokeRes.data;\n\n        if (!seenJokes.joke.id) {\n          seenJokes.add(joke.id);\n          jokeVotes[joke.id] = jokeVotes[joke.id];\n          jokeObj.text = joke;\n          this.state.jokes.push(joke);\n        } else {\n          console.error(\"duplicate\");\n        }\n      }\n\n      this.setState({ jokes });\n      window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  generateNewJokes() {\n    this.setState((st) => ({ jokes: st.jokes.filter((j) => j.locked) }));\n  }\n\n  resetVotes() {\n    window.localStorage.setItem(\"jokeVotes\", \"{}\");\n    this.setState((st) => ({\n      jokes: st.jokes.map((joke) => ({ ...joke, votes: 0 })),\n    }));\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  vote(id, delta) {\n    let jokeVotes = JSON.parse(window.localStorage.getItem(\"jokeVotes\"));\n    jokeVotes[id] = (jokeVotes[id] || 0) + delta;\n    window.localStorage.setItem(\"jokeVotes\", JSON.stringify(jokeVotes));\n    this.setState((st) => ({\n      jokes: st.jokes.map((j) =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      ),\n    }));\n  }\n\n  toggleLock(id) {\n    this.setState((st) => ({\n      jokes: st.jokes.map((j) =>\n        j.id === id ? { ...j, locked: !j.locked } : j\n      ),\n    }));\n  }\n\n  render() {\n    let showJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    let allLocked =\n      showJokes.filter((j) => j.locked).length ===\n      this.props.numJokesToGet;\n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={this.generateNewJokes}\n          disabled={allLocked}\n        >\n          Get New Jokes\n        </button>\n        <button className=\"JokeList-getmore\" onClick={this.resetVotes}>\n          Reset Vote Counts\n        </button>\n        {showJokes.map((j) => (\n          <Joke\n            text={j.text}\n            key={j.id}\n            id={j.id}\n            votes={j.votes}\n            vote={this.vote}\n            locked={j.locked}\n            toggleLock={this.toggleLock}\n          />\n        ))}\n        {showJokes.length < this.props.numJokesToGet ? (\n          <div className=\"loading\">\n            <i className=\"fas fa-4x fa-spinner fa-spin\" />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}